{"version":3,"file":"static/js/314.d0024a91.chunk.js","mappings":"4NAqEA,EAlEiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,EAAW,SAACC,GAChB,MAA+BA,EAAxBC,OAASC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MACV,UAATD,EACDV,EAASW,GACM,aAAPD,GACRR,EAAYS,EAEf,EACKC,EAAQ,yCAAG,WAAMJ,GAAN,iFACfA,EAAMK,iBADS,SAIPC,GAAcC,EAAAA,EAAAA,OACjBZ,EALU,iCAMEa,EAAAA,EAAAA,IACXF,EAAaf,EAAOE,GAPX,OAMXgB,EANW,gDAUEC,EAAAA,EAAAA,IAA2BJ,EAAaf,EAAOE,GAVjD,QAUXgB,EAVW,eAYbE,QAAQC,IAAIH,GAZC,kDAcbX,EAAS,KAAMe,SAdF,0DAAH,sDAmBd,OACE,iCACE,kBAAMT,SAAUA,EAAUU,UAAU,YAApC,WACE,kBACEZ,KAAK,QACLa,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRd,MAAOZ,EACPQ,SAAUA,EACVe,UAAU,eAEZ,kBACEZ,KAAK,WACLa,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRd,MAAOV,EACPM,SAAUA,EACVe,UAAU,eAEZ,kBACEA,UAAU,uBACVC,KAAK,SACLZ,MAAOR,EAAa,iBAAmB,WAExCE,IAAS,iBAAMiB,UAAU,YAAhB,SAA6BjB,QAEzC,iBAAMqB,QA9BY,kBAAMtB,GAAc,SAACuB,GAAD,OAAWA,CAAX,GAApB,EA8BYL,UAAU,aAAxC,SACGnB,EAAa,UAAY,qBAIjC,E,oBCtBD,EAnCa,WACX,IAAMyB,EAAa,yCAAG,WAAOpB,GAAP,sFAKP,YAHDE,EACRF,EADFC,OAAUC,MAIVmB,EAAW,IAAIC,EAAAA,GACG,WAATpB,IACTmB,EAAW,IAAIE,EAAAA,IARG,UAUDC,EAAAA,EAAAA,IAAgBlB,EAAAA,GAAae,GAV5B,OAUdZ,EAVc,OAWpBE,QAAQC,IAAIH,GAXQ,2CAAH,sDAanB,OACE,iBAAKK,UAAU,gBAAf,WACE,SAAC,IAAD,CACEW,KAAMC,EAAAA,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,OAEzB,SAAC,EAAD,KACA,iBAAKhB,UAAU,WAAf,WACE,oBAAQI,QAASE,EAAelB,KAAK,SAASY,UAAU,UAAxD,mCACuB,SAAC,IAAD,CAAiBW,KAAMM,EAAAA,UAE9C,oBAAQb,QAASE,EAAelB,KAAK,SAASY,UAAU,UAAxD,mCACuB,SAAC,IAAD,CAAiBW,KAAMO,EAAAA,cAKrD,C","sources":["components/AuthForm.js","routes/Auth.js"],"sourcesContent":["import { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {target: {name, value}} =event;\n    if(name === \"email\"){\n      setEmail(value)\n    } else if(name===\"password\"){\n      setPassword(value);\n    }\n  }\n  const onSubmit = async(event) => {\n    event.preventDefault();\n    try {\n      let data;\n      const authService = getAuth()\n      if(newAccount){\n        data = await createUserWithEmailAndPassword(\n          authService, email, password\n        )\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data)\n    } catch(error) {\n      setError(error.message)\n    }   \n  }\n  const toggleAccount = () => setNewAccount((prev) => !prev)\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;","import { authService } from \"fbase\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GithubAuthProvider, GoogleAuthProvider } from 'firebase/auth';\nimport AuthForm from \"components/AuthForm\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    const data = await signInWithPopup(authService, provider);\n    console.log(data);\n  }\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Auth;\n// export default () => <span>Auth</span>"],"names":["useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","authService","getAuth","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub"],"sourceRoot":""}